<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.spotify</groupId>
    <artifactId>foss-root</artifactId>
    <version>17</version>
  </parent>

  <artifactId>missinglink-parent</artifactId>
  <version>0.2.12-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>missinglink</name>

  <description>
    Missinglink scans the bytecode of dependency libraries to attempt to find problems
    (such as NoSuchMethodError) caused by conflicting versions that would otherwise only
    be found at runtime.
  </description>

  <url>https://github.com/spotify/missinglink</url>

  <organization>
    <name>Spotify AB</name>
    <url>http://www.spotify.com</url>
  </organization>

  <developers>
    <developer>
      <id>liljencrantz</id>
      <name>Axel Liljencrantz</name>
      <email>liljencrantz@spotify.com</email>
    </developer>
    <developer>
      <id>krka</id>
      <name>Kristofer Karlsson</name>
      <email>krka@spotify.com</email>
    </developer>
    <developer>
      <id>mattbrown</id>
      <name>Matt Brown</name>
      <email>mattbrown@spotify.com</email>
    </developer>
    <developer>
      <id>pettermahlen</id>
      <name>Petter Måhlén</name>
      <email>petter@spotify.com</email>
    </developer>
    <developer>
      <id>dflemstr</id>
      <name>David Flemström</name>
      <email>dflemstr@spotify.com</email>
      <roles>
        <role>contributor</role>
      </roles>
    </developer>
  </developers>

  <modules>
    <module>benchmarks</module>
    <module>core</module>
    <module>maven-plugin</module>
  </modules>

  <properties>
    <auto-matter.version>0.26.2</auto-matter.version>
    <!-- cobertura format needs to be xml for coveralls integration, but allow it to be specified
    as a property so it can be overridden to use html for anyone who wants to generate cobertura
    themselves from command-line -->
    <cobertura.format>xml</cobertura.format>
  </properties>

  <scm>
    <connection>scm:git:git@github.com:spotify/missinglink.git</connection>
    <developerConnection>scm:git:git@github.com:spotify/missinglink.git</developerConnection>
    <url>https://github.com/spotify/missinglink</url>
    <tag>HEAD</tag>
  </scm>

  <dependencyManagement>
    <dependencies>
      <!-- addresses conflict between maven-core:3.3.3 and maven-dependency-tree:3.0.1 -->
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-annotations</artifactId>
        <version>2.2.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.14.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
          <configuration>
            <useIncrementalCompilation>false</useIncrementalCompilation>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
      <!-- format code within the Maven build. CI will run fmt:check to reject unformatted changes -->
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
